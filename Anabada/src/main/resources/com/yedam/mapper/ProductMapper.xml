<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yedam.mapper.ProductMapper">

	<!-- 상품 목록 -->
	<select id="selectProductList">
	    select *
	    from (
			select p.*
			from   product p
			order by p.prd_no desc
	    )
	    <![CDATA[ 
	    where rownum  <= 16
	    ]]>
	</select>
	<!-- 목록 조회 -->
 <select id="selectProducts" parameterType="com.yedam.vo.SearchVO" resultType="com.yedam.vo.ProductVO">
  SELECT 
  prd_no, 
  prd_name, 
  prd_tag, 
  price,
  prd_img,
  TO_CHAR(PRD_DATE,'YYYY--MM-DD') AS prdDate, 
  category
  FROM product
  <where>
  <if test="category != null and category != ''">
      AND CATEGORY = #{category}        <!-- ★ 카테고리 필터 -->
    </if>
    
    <if test="keyword != null and keyword != ''">
      <choose>
        <when test="searchCondition == 'N'">
          AND prd_name LIKE '%' || #{keyword} || '%'
        </when>
        <when test="searchCondition == 'T'">
          AND prd_tag = #{keyword}
        </when>
        <otherwise>
          AND (prd_name LIKE '%' || #{keyword} || '%' OR prd_tag = #{keyword})
        </otherwise>
      </choose>
    </if>
  </where>
  ORDER BY prd_no DESC
  OFFSET #{offset} ROWS FETCH NEXT #{amount} ROWS ONLY
</select>

  <!-- 총 건수 (페이징 계산용) -->
  <select id="countProducts"
          parameterType="com.yedam.vo.SearchVO"
          resultType="int">
    SELECT COUNT(*)
    FROM product
    <where>
     <if test="category != null and category != ''">
      AND CATEGORY = #{category}
    </if>
      <if test="keyword != null and keyword != ''">
        <choose>
          <when test="searchCondition == 'N'">
            AND prd_name LIKE CONCAT('%', #{keyword}, '%')
          </when>
          <when test="searchCondition == 'T'">
            AND prd_tag = #{keyword}
            <!-- 콤마 문자열이면: AND FIND_IN_SET(#{keyword}, prd_tag) > 0 -->
          </when>
          <otherwise>
            AND (prd_name LIKE CONCAT('%', #{keyword}, '%')
                 OR prd_tag = #{keyword})
          </otherwise>
        </choose>
      </if>
    </where>
  </select>
	<!-- 상품 단건 조회 -->
	<select id="selectProduct" parameterType="int" resultType="product">
		select *
		from   product
		where  prd_no = #{prdNo}
	</select>
	
	<!--  내가 한 찜 목록보기  -->
	<select id="selectWish" parameterType="int" resultType="product">
	    select  p.prd_no,
	            p.prd_name,
	            p.price,
	            p.prd_img,
	            p.sale_status,
	            w.wish_no
	    from wish w join product p
	                  on w.prd_no = p.prd_no
	    WHERE w.member_no = #{memberNo}
	    ORDER BY w.wish_no DESC;
	</select>

	<!--  상품별 찜한 사람 수 조회  -->
	<select id="countWishMember">
	    select  p.prd_no,
	            p.prd_name,
	            count(w.member_no) AS wish_count
	    from wish w join product p
	                  on w.prd_no = p.prd_no
	                group by p.prd_no, p.prd_name
	    order by wish_count desc
	</select>
  
  
  
  
  
  
  
  
  
  
	<!-- 메인: 최신 N개 + 대표이미지 -->
<!-- 	<select id="selectRecentImage" parameterType="int" resultType="product">
	    SELECT
	       p.prd_no                           AS prdNo,
	       p.prd_name                         AS prdName,
	       p.price                            AS price,
	       TO_CHAR(p.prd_date, 'YYYY-MM-DD')  AS prdDate,
	       p.category                         AS category,
	       p.sido                             AS sido,
	       p.sigungu                          AS sigungu,
	       NVL(p.prd_img, 'noimage.png')      AS prdImg
	    FROM product p
	    WHERE p.sale_status = '판매중'
	    ORDER BY p.prd_date DESC
	    FETCH FIRST #{limit} ROWS ONLY
	</select> -->

  <!-- 상품 목록(카테고리/검색/정렬/페이징) -->
  <!--  <select id="selectProductList" parameterType="map" resultType="product">

    <bind name="qLike" value="q != null ? ('%' + q.toUpperCase() + '%') : null"/>
    SELECT
       p.prd_no                           AS prdNo,
       p.prd_name                         AS prdName,
       p.price                            AS price,
       TO_CHAR(p.prd_date, 'YYYY-MM-DD')  AS prdDate,
       p.category                         AS category,
       p.prd_status                       AS prdStatus,
       p.prd_desc                         AS prdDesc,
       p.prd_tag                          AS prdTag,
       p.trade_type                       AS tradeType,
       p.sale_status                      AS saleStatus,
       NVL(p.prd_img, 'noimage.png')      AS prdImg,
       p.sido                             AS sido,
       p.sigungu                          AS sigungu,
       p.dong                             AS dong,
       p.lat                              AS lat,
       p.lng                              AS lng,
       p.member_no                        AS memberNo
    FROM product p
    WHERE p.sale_status = '판매중'
      <if test="category != null and category != ''">
        AND p.category = #{category}
      </if>
      <if test="qLike != null">
        AND (
              UPPER(p.prd_name)  LIKE #{qLike}
           OR UPPER(p.sido)      LIKE #{qLike}
           OR UPPER(p.sigungu)   LIKE #{qLike}
           OR UPPER(p.dong)      LIKE #{qLike}
           OR UPPER(p.prd_tag)   LIKE #{qLike}
        )
      </if>
    <choose>
      <when test="sort == 'low'">
        ORDER BY p.price ASC, p.prd_date DESC
      </when>
      <when test="sort == 'high'">
        ORDER BY p.price DESC, p.prd_date DESC
      </when>
      <otherwise>
        ORDER BY p.prd_date DESC
      </otherwise>
    </choose>

    <if test="pageSize != null and pageSize > 0">
      OFFSET #{offset, jdbcType=INTEGER} ROWS
      FETCH NEXT #{pageSize, jdbcType=INTEGER} ROWS ONLY
    </if>
  </select>-->
    


</mapper>